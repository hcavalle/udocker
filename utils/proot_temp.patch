--- PRoot-orig/src/path/temp.c	2017-02-10 23:04:47.000000000 +0000
+++ PRoot-FIXED/src/path/temp.c	2017-09-16 00:58:07.745728796 +0100
@@ -11,6 +11,33 @@
 #include "cli/note.h"
 
 /**
+ * Handle the return of d_type = DT_UNKNOWN by readdir(3)
+ * Not all filesystems support returning d_type in readdir(3)
+ * Based on:
+ * ftp://ftp.ics.uci.edu/pub/centos0/ics-custom-build/BUILD/git-1.6.0.4/dir.c
+ * Copyright (C) Linus Torvalds, 2005-2006
+ * 		 Junio Hamano, 2005-2006
+ * 		 Jorge Gomes, 2017
+ */
+static int get_dtype(struct dirent *de)
+{
+	int dtype = de ? de->d_type : DT_UNKNOWN;
+	struct stat st;
+
+	if (dtype != DT_UNKNOWN)
+		return dtype;
+	if (lstat(de->d_name, &st))
+		return dtype;
+	if (S_ISREG(st.st_mode))
+		return DT_REG;
+	if (S_ISDIR(st.st_mode))
+		return DT_DIR;
+	if (S_ISLNK(st.st_mode))
+		return DT_LNK;
+	return dtype;
+}
+
+/**
  * Remove recursively the content of the current working directory.
  * This latter has to lie in P_tmpdir (ie. "/tmp" on most systems).
  * This function returns -1 if a fatal error occured (ie. the
@@ -67,7 +94,7 @@
 			continue;
 		}
 
-		if (entry->d_type == DT_DIR) {
+		if (get_dtype(entry) == DT_DIR) {
 			status = chdir(entry->d_name);
 			if (status < 0) {
 				note(NULL, WARNING, SYSTEM, "can't chdir '%s'", entry->d_name);
